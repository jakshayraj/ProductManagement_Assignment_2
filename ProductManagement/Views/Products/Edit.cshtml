@model ProductManagement.Models.Product

@{
    ViewBag.Title = "Edit";
}

@{
    Layout = null;
}
<title>@ViewBag.Title</title>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
<body>
    <div class="container-fluid pd-2 rounded mx-auto bg-primary text-white" style="width: 50%; border-radius:1px">
        <div class="col-sm-9 col-md-7 col-lg-10 mx-auto my-4" style="padding:20px;">
            @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Edit</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                    </div>
                    @{
                        SelectList data = new SelectList(ViewBag.categories);
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownListFor(model => model.Category, data, "Select Category", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Quantity, new SelectList(ViewBag.quantities), "Select Quantity", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Short_desc, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Short_desc, htmlAttributes: new { @class = "form-control", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.Short_desc, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Long_desc, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Long_desc, htmlAttributes: new { @class = "form-control", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.Long_desc, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Small_img, htmlAttributes: new { @class = "control-label" })
                        <input type="file" name="SmallImagefile" id="SmallImagefile" />

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Large_img, htmlAttributes: new { @class = "control-label" })
                        <input type="file" name="LargeImagefile" id="LargeImagefile" />

                    </div>


                    <div>
                        <div>
                            <input type="submit" value="Save" class="btn btn-secondary" />

                            @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-secondary" })
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>


</body>